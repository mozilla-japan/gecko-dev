/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "nsXREAppData.h"
#include "nsXULAppAPI.h"
#include "application.ini.h"
#include "nsXPCOMGlue.h"
#include "nsXPCOMPrivate.h"
#include "nsStringGlue.h"
#include "nsCOMPtr.h"
#include "nsIFile.h"
#include "BinaryPath.h"
#include <stdio.h>

XRE_mainType XRE_main;

static const nsDynamicFunctionLoad kXULFuncs[] = {
  { "XRE_main", (NSFuncPtr*)&XRE_main },
  { nullptr, nullptr }
};

int main(int argc, const char* argv[])
{
  char exePath[MAXPATHLEN];

  nsresult rv = mozilla::BinaryPath::Get(argv[0], exePath);
  if (NS_FAILED(rv)) {
    printf_stderr("Couldn't calculate the application directory.\n");
    return 255;
  }

  char* lastSlash = strrchr(exePath, XPCOM_FILE_PATH_SEPARATOR[0]);
  if (!lastSlash || ((lastSlash - exePath) + sizeof(XPCOM_DLL) + 1 > MAXPATHLEN)) {
    printf_stderr("Couldn't calculate XPCOM shared library location.\n");
    return 255;
  }

  strcpy(++lastSlash, XPCOM_DLL);

  // Here we go.
  XPCOMGlueEnablePreload();

  rv = XPCOMGlueStartup(exePath);
  if (NS_FAILED(rv)) {
    printf_stderr("Couldn't load XPCOM.\n");
    return 255;
  }

  rv = XPCOMGlueLoadXULFunctions(kXULFuncs);
  if (NS_FAILED(rv)) {
    printf_stderr("Couldn't load XRE functions.\n");
    return 255;
  }

  nsXREAppData appData;
  // sAppData is a magical constant generated by the build system.
  appData = sAppData;

  return XRE_main(argc, (char**)argv, &appData, 0);
}
